syntax = "proto3";

package cafelogos;

import "proto/common.proto";

option go_package = "pkg/proto/";


service PosService {
    rpc GetOrders(GetOrdersRequest) returns (GetOrdersResponse) {}
    rpc PostOrder(PostOrderRequest) returns (Empty) {}
    rpc GetProducts(Empty) returns (GetProductsResponse) {}
    // Only Admin
    rpc GetProductCategories(Empty) returns (GetProductCategoriesResponse) {}
    rpc PostProductCategory(PostProductCategoryRequest) returns (Empty) {}

    rpc PostProduct(PostProductRequest) returns (Empty) {}
    rpc UpdateProduct(UpdateProductRequest) returns (Empty) {}
    rpc DeleteProduct(DeleteProductRequest) returns (Empty) {}

    rpc PostStock(PostStockRequest) returns (Empty) {}
    rpc GetStocks(Empty) returns (GetStocksResponse) {}

    rpc PostCoffeeBean(PostCoffeeBeanRequest) returns (Empty) {}
    rpc GetCoffeeBeans(Empty) returns (GetCoffeeBeansResponse) {}

    rpc DeleteAllOrders(Empty) returns (Empty) {}
}

/**
 * Request/Response
 */
message GetOrdersRequest {}
message GetOrdersResponse {
    repeated Order orders = 1;
}

message PostOrderRequest {
    Order order = 1;
}

message GetProductsResponse {
    repeated Product products = 1;
}

message GetProductCategoriesResponse {
    repeated ProductCategory product_categories = 1;
}
message PostProductCategoryRequest {
    string name = 1;
}
message PostProductRequest {
    ProductParam product = 1;
}
message UpdateProductRequest {
    string product_id = 1;
    ProductParam product = 2;
}
message DeleteProductRequest {
    string product_id = 1;
}
message PostStockRequest {
    string name = 1;
    uint32 quantity = 2;
}
message GetStocksResponse {
    repeated Stock stocks = 1;
}
message PostCoffeeBeanRequest {
    string name = 1;
    int32 gram_quantity = 2;
}
message GetCoffeeBeansResponse {
    repeated CoffeeBean coffee_beans = 1;
}

/**
 * Types
 */
/** Product */
message Product {
    string product_id = 1;
    string product_name = 2;
    ProductCategory product_category = 3;
    ProductType product_type = 4;
    bool is_now_sales = 5;
    // Only Coffee
    CoffeeBean coffee_bean = 6;
    repeated CoffeeBrew coffee_brews = 7;
    // Only Other
    uint64 amount = 8;
    Stock stock = 9;
}
message ProductParam {
    string product_name = 1;
    string product_category_id = 2;
    ProductType product_type = 3;
    bool is_now_sales = 4;
    // Only Coffee
    string coffee_bean_id = 5;
    repeated CoffeeBrew coffee_brews = 6;
    // Only Other
    uint64 amount = 7;
    string stock_id = 8;
}
message ProductCategory {
    string id = 1;
    string name = 2;
}
enum ProductType {
    COFFEE = 0;
    OTHER = 1;
}
message CoffeeBean {
    string id = 1;
    string name = 2;
    int32 gram_quantity = 3;
}
message CoffeeBrew {
    string id = 1;
    string name = 2;
    uint32 bean_quantity_grams = 3;
    uint64 amount = 4;
}
message Stock {
    string id = 1;
    string name = 2;
    uint32 quantity = 3;
}

/** Order */
message Order {
    string id = 1;
    repeated OrderItem items = 2;
    repeated Discount discounts = 3;
    Payment payment = 4;
    string payment_at = 5;
    string order_at = 6;
    string call_number = 7;
    string client_id = 8;
}


message OrderItem {
    string product_id = 1;
    string quantity = 2;
    uint64 amount = 3;
    string coffee_brew_id = 4;
}

message Discount {
    string id = 1;
    DiscountType type = 2;
    uint64 discount_amount = 3;

    enum DiscountType {
        PRICE = 0;
    }
}

message Payment {
    string id = 1;
    PaymentType type = 2;
    uint64 receive_amount = 3;
    uint64 payment_amount = 4;
    uint64 change_amount = 5;

    enum PaymentType {
        CASH = 0;
    }
}